\ProvidesPackage{calcnotes}

%% LOAD PACKAGES

% Load AMS-LaTeX packages for math typesetting
\RequirePackage{amsfonts}
\RequirePackage{amssymb}
\RequirePackage{amsthm}
\RequirePackage{mathtools}

% Load COntent-Oriented LaTeX for semantic math
\RequirePackage{cool}

% Load SIUnitX for units handling
\RequirePackage[per-mode=symbol]{siunitx}

% Load xfrac for nice fractions
\RequirePackage{xfrac}

% Set up font handling
\RequirePackage{libertinus}
\RequirePackage{libertinust1math}
\RequirePackage[T1]{fontenc}
\RequirePackage{microtype}

% Use subfiles for chapter includes
\RequirePackage{subfiles}

% Load the csquotes package for semantic quotation marks
\RequirePackage{csquotes}

% Load the TikZ package for header design
\RequirePackage{tikz}

% Load the Asymptote package for figures and diagrams
\RequirePackage[inline]{asymptote}

% Load the float package for fine-grained control over float placement
\RequirePackage{float}

% Load the fullwidth package for figures that span the margin
\RequirePackage{fullwidth}

% Load the booktabs package for professional-looking tables
\RequirePackage{booktabs}

% Load the listings package for code listings
\RequirePackage{listings}

% Load the answers package for exercises
\RequirePackage{answers}

% Load the ccicons package for Creative Commons icons
\RequirePackage{ccicons}

% Load the gitinfo package to show git commit information in footer
\RequirePackage{gitinfo}

% Load the makeidx package to build the index
\RequirePackage[xindy]{imakeidx}

% Load the xparse package to support some fancy defines
\RequirePackage{xparse}

% Load the hyperref package for hyperlinking (MUST BE LAST)
\RequirePackage{hyperref}

% Load the cleveref package for intelligent cross-referencing (MUST BE AFTER HYPERREF)
\RequirePackage[capitalize]{cleveref}

% Load the foreign package for intelligent formatting of non-english words
\RequirePackage{foreign}

%% SET OPTIONS

% Configure listings
\lstset{
  basicstyle=\footnotesize\ttfamily,
  commentstyle=\color{gray},
  numbers=left,
  breaklines=true,
  breakatwhitespace=true,
  numberstyle=\footnotesize,
  stepnumber=2,
  showstringspaces=false,
}

% Configure cleveref
\crefname{lstlisting}{listing}{listings}
\Crefname{lstlisting}{Listing}{Listings}
\crefname{equation}{equation}{equations}

% Configure theorem styles
\theoremstyle{plain}
\newtheorem{theorem}{Theorem}[section]
\newtheorem{corollary}[theorem]{Corollary}
\newtheorem{lemma}[theorem]{Lemma}
\newtheorem{proposition}[theorem]{Proposition}
\newtheorem{observation}[theorem]{Observation}

\newtheorem*{theorem*}{Theorem}
\newtheorem*{corollary*}{Corollary}
\newtheorem*{lemma*}{lemma}
\newtheorem*{proposition*}{Proposition}
\newtheorem*{observation*}{Observation}

\newtheorem*{motprob}{Problem}

\theoremstyle{definition}
\newtheorem{definition}[theorem]{Definition}
\newtheorem*{definition*}{Definition}

\theoremstyle{remark}
\newtheorem{remark}[theorem]{Remark}
\newtheorem*{remark*}{Remark}

\newtheorem{example}[theorem]{Example}
\newtheorem*{example*}{Example}

\newtheorem*{motex}{Motivating example}

\newtheorem{note}[theorem]{Note}
\newtheorem*{note*}{Note}

\newtheorem*{soln}{Solution}

% Number equations within sections
\numberwithin{equation}{section}

% Define command to format defined term
\NewDocumentCommand{\defterm}{mO{#1}O{|textbf}}{\emph{#1}\index{#2#3}}

% Define command to render chosen license mark
\newcommand{\licensemark}{\ccbysa}
\newcommand{\licensemarklink}{\href{http://creativecommons.org/licenses/by-sa/4.0/}{\ccbysa}}

% Define command to print Git hash as a Github url
\newcommand{\hashurl}{\href{http://github.com/againerdewar/calculus-reader/tree/\gitHash}{\gitAbbrevHash}}

% Use roman d for differentiation and integration
\Style{DSymb=\mathrm{d},DShorten=true,IntegrateDifferentialDSymb=\mathrm{d}}

% Define command for writing differentials
\newcommand*{\diff}[1]{\ensuremath{\COOL@notation@IntegrateDifferentialDSymb #1}}

% Override CoOL's derivative command, which breaks with some font packages
\renewcommand*{\D}[3][]{\ensuremath{\frac{\COOL@notation@DSymb^{#1} {#2}}{\COOL@notation@DSymb {#3}^{#1}}}}

% Define command for antidifferentiation
\newcommand*{\AD}[2]{\D[-1]{#1}{#2}}

% Define command for difference quotients
\newcommand{\diffquot}[3][\Delta]{\ensuremath{\frac{{#1} {#2}}{{#1} {#3}}}}

% Use fancy paired delimiters
\DeclarePairedDelimiter{\pbrac}{(}{)}
\DeclarePairedDelimiter{\sbrac}{[}{]}
\DeclarePairedDelimiter{\cbrac}{\{}{\}}
\DeclarePairedDelimiter{\floor}{\lfloor}{\rfloor}
\DeclarePairedDelimiter{\ceil}{\lceil}{\rceil}
\DeclarePairedDelimiter{\abs}{\lvert}{\rvert}
\DeclarePairedDelimiter{\norm}{\lVert}{\rVert}

\DeclarePairedDelimiter{\closedint}{[}{]}
\DeclarePairedDelimiter{\openint}{(}{)}

\DeclarePairedDelimiter{\eval}{.}{\rvert}

\DeclarePairedDelimiterX{\setbuilder}[2]{\{}{\}}{#1 \delimsize\vert #2}

% Add some imperial units
\DeclareSIUnit{\year}{yr}
\DeclareSIUnit{\foot}{ft}
\DeclareSIUnit{\inch}{in}
\DeclareSIUnit{\mile}{mi}
\DeclareSIUnit{\gallon}{gal}
\DeclareSIUnit{\bit}{b}
\DeclareSIUnit{\byte}{B}
\DeclareSIUnit{\dollar}{\$}

% Commands for names of important fields
\newcommand*{\fieldname}[1]{\ensuremath{\mathbf{#1}}}
\newcommand*{\RR}[1][]{\ensuremath{\fieldname{R}^{#1}}}
\newcommand*{\QQ}{\fieldname{Q}}
\newcommand*{\CC}{\fieldname{C}}

% Notation for average value
\newcommand*{\avg}[1]{\ensuremath{\overline{#1}}}

% Area function from integral calculus
\newcommand*{\areafunc}[3]{\ensuremath{A_{{#1},{#2}} \pbrac*{#3}}}

\begin{asydef}
  import graph;
  import graph3;
  import patterns;

  settings.prc = false;

  real marginwidth = 1.5inches;
  real blockwidth = 5.0inches;
  real blockscrunch = 1.0inches;
  real blockintermargin = 0.25inches;

  void smallsize() {size(marginwidth, 0);}
  void medsize() {size(blockwidth, 0);}
  void medsizescrunch() {size(blockwidth - blockscrunch, 0);}
  void medhalf() {size((blockwidth - blockintermargin)/2, 0);}
  void medthird() {size((blockwidth - 2*blockintermargin)/3, 0);}

  pen lineplot = defaultpen;
  pen thickplot = linewidth(1);

  pen dashedline = dashed+linewidth(1);
  pen dash1 = dashed;
  pen dash2 = longdashed;
  pen dash3 = dotted;

  pen transparency = opacity(0.25);

  pen box1 = gray + transparency;
  pen box2 = black + transparency;
  pen box3 = heavygray + transparency;

  pen solid1 = gray;

  pen dot1 = black;

  void drawbox(real left, real right, real height, pen fillpen = lightgray)
  {
    path thebox = box((left,0),(right,height));
    filldraw(thebox, fillpen);
  }

  void drawrects(real[][] samplepoints, pen fillpen = lightgray){
    for(real[] rect : samplepoints){
      drawbox(rect[0], rect[1], rect[3], fillpen);
    }
  }

  void drawtests(real[][] samplepoints, pen drawpen = dashed){
    for(real[] rect : samplepoints){
      draw((rect[2], 0) -- (rect[2], rect[3]), drawpen);
    }
  }

  real[][] leftrierects(real f(real), real a, real b, int n)
  {
    real dx = (b-a)/n;
    real[][] rects;
    for(int i=0; i<n; ++i) {
      real left = a + i*dx;
      real right = left + dx;
      real test = left;
      rects[i] = new real[] {left, right, test, f(test)};
    }
    return rects;
  }

  real[][] midrierects(real f(real), real a, real b, int n)
  {
    real dx = (b-a)/n;
    real[][] rects;
    for(int i=0; i<n; ++i) {
      real left = a + i*dx;
      real right = left + dx;
      real mid = (left + right)/2;
      real test = mid;
      rects[i] = new real[] {left, right, test, f(test)};
    }
    return rects;
  }

  real[][] rightrierects(real f(real), real a, real b, int n)
  {
    real dx = (b-a)/n;
    real[][] rects;
    for(int i=0; i<n; ++i) {
      real left = a + i*dx;
      real right = left + dx;
      real test = right;
      rects[i] = new real[] {left, right, test, f(test)};
    }
    return rects;
  }

  void labelxticks(real[] xtickpoints)
  {
    int n = xtickpoints.length;
    for(int i=1; i<n; ++i) {
      string ilabel = (string) i;
      labelx("$x_{"+ilabel+"}$", xtickpoints[i-1]);
    }
  }

  void labelxstarticks(real[] xtickpoints)
  {
    int n = xtickpoints.length;
    for(int i=1; i<=n; ++i) {
      string ilabel = (string) i;
      labelx("$x^{*}_{"+ilabel+"}$", xtickpoints[i-1]);
    }
  }

  void fillbetween(real f(real), real g(real), real a, real b, pen fillpen, pen linepen = lineplot)
  {
    path uppercurve = graph(f, a, b, operator ..);
    path lowercurve = graph(g, b, a, operator ..);
    fill (uppercurve -- lowercurve -- cycle, fillpen);

    path leftline = (a,g(a))--(a,f(a));
    path rightline = (b,f(b))--(b,g(b));
    draw(leftline, linepen);
    draw(rightline, linepen);
  }

  void fillunder(real f(real), real a, real b, pen fillpen, pen linepen = lineplot)
  {
    real zero(real x) {return 0;}
    fillbetween(f, zero, a, b, fillpen, linepen);
  }

  path funcplot(real f(real), real a, real b, pen drawpen = thickplot)
  {
    path fplot = graph(f, a, b, operator ..);
    draw(fplot, drawpen);
    return fplot;
  }

  path tanplot(real f(real), real df(real), real a, real start, real end, pen drawpen = thickplot, pen dotpen = dot1)
  {
    real tanline(real x) {return f(a) + df(a)*(x-a);}
    path lineplot = graph(tanline, start, end);

    draw(lineplot, drawpen);

    dot((a, f(a)), dotpen);

    return lineplot;
  }

  path secplot(real f(real), real a, real b, real start, real end, pen drawpen = thickplot, pen dotpen = thickplot)
  {
    real secline(real x) {return f(a) + (f(b) - f(a))/(b - a) * (x - a);}
    path lineplot = graph(secline, start, end);

    draw(lineplot, drawpen);

    dot((a, f(a)), dotpen);
    dot((b, f(b)), dotpen);

    return lineplot;
  }

  ticklabel Unlabel(real[] x)
  {
    return new string(real v)
    {
      return "";
    };
  }
\end{asydef}

%% CONFIGURE LAYOUT

% Use an index
\makeindex[intoc]

% Set up title page
\setlength{\droptitle}{1in}

\newcommand{\subtitle}[1]{\gdef\thesubtitle{#1}}

\definecolor{titlecolor}{gray}{0} % Black title
\newcommand{\titlefont}{\color{titlecolor}\fontsize{3cm}{0cm}\sffamily\bfseries} % Printed in giant bold sans-serif

\definecolor{subtitlecolor}{gray}{0.5} % Gray subtitle
\newcommand{\subtitlefont}{\color{subtitlecolor}\fontsize{3cm}{0cm}\sffamily\itshape} % Printed in giant italic sans-serif
\newcommand{\authorfont}{\fontsize{1cm}{0cm}\sffamily}

\renewcommand{\maketitle}{
  \thispagestyle{empty}
  \vspace*{\stretch{1}}
  \begin{flushright}
    {\titlefont\thetitle}\\[\baselineskip]
    {\subtitlefont\thesubtitle}
  \end{flushright}
  \vspace*{\stretch{2}}
  \begin{flushright}
    {\authorfont\theauthor}
  \end{flushright}
  \vspace*{\stretch{4}}
}

% Next, we define the part style
\aliaspagestyle{part}{empty} % No page numbers on part pages

\definecolor{partnumbercolor}{gray}{0.9} % Light gray part number
\renewcommand{\partnumfont}{\fontsize{8cm}{0cm}\bfseries} % Printed in giant bold serif face (because Biolinum I looks silly)

\definecolor{parttitlecolor}{gray}{0} % Black part name
\renewcommand{\parttitlefont}{\fontsize{1.5cm}{0cm}\bfseries\sffamily} % Printed in large bold sans-serif

\renewcommand{\printpartname}{} % Suppress internal part printing
\renewcommand{\printpartnum}{} % Suppress internal number printing
%\setlength{\midpartskip}{0pt} % Suppress space before printout

\renewcommand{\printparttitle}[1]{%
  \begin{tikzpicture}%
    \draw[color=partnumbercolor] (0, 0) node { \partnumfont \thepart };%
    \draw[color=parttitlecolor] (0, 0) node[text width=\textwidth, align=center] { \parttitlefont #1 };%
  \end{tikzpicture}%
}

% Next, we configure the chapter style
\makechapterstyle{calcnotes}{
  \renewcommand*{\chapterheadstart}{} % Don't do anything (like vertical space) before printing chapter heading

  \definecolor{chaptertitlecolor}{gray}{0} % Black chapter title
  \renewcommand*{\chaptitlefont}{\fontsize{1.5cm}{0cm}\bfseries\sffamily} % Printed in large bold sans-serif

  \definecolor{chapternumbercolor}{gray}{0.8} % Light gray chapter number
  \renewcommand*{\chapnumfont}{\fontsize{6cm}{0cm}\bfseries\sffamily} % Printed in huge bold sans-serif

  \renewcommand*{\printchaptername}{} % Suppress internal chapter name printing
  \renewcommand*{\printchapternum}{} % Suppress internal number printing
  \renewcommand*{\printchaptertitle}[1]{%
    \null
    \begin{tikzpicture}%
      \ifm@m@And
      \draw[color=chapternumbercolor] (0, 0) node[anchor=west] (number) { \chapnumfont \thechapter };
      \fi
      \draw[color=chaptertitlecolor] (-0.3cm, 0) node[anchor=east,text width=\textwidth,align=flush right] (name) { \chaptitlefont ##1};
    \end{tikzpicture}
  }

  \renewcommand*{\afterchapternum}{}
}

\chapterstyle{calcnotes}

% Next, we configure section headings
\newcommand*{\seccommonfont}{\bfseries\sffamily}
\renewcommand{\secheadstyle}{\huge\seccommonfont}
\renewcommand{\subsecheadstyle}{\Large\seccommonfont}
\renewcommand{\subsubsecheadstyle}{\large\seccommonfont}
\renewcommand{\paraheadstyle}{\normalsize\seccommonfont}
\renewcommand{\subparaheadstyle}{\normalsize\seccommonfont}

% Next, we configure the page style
\copypagestyle{calcnotes}{companion}

\newcommand{\headerfont}{\seccommonfont}
\makeevenhead{calcnotes}{\headerfont\thepage}{}{\headerfont\licensemarklink \quad (\hashurl)\\\leftmark}
\makeoddhead{calcnotes}{\headerfont(\hashurl) \quad \licensemarklink\\\rightmark}{}{\headerfont\thepage}

\pagestyle{calcnotes}

% Memoir only numbers down to sections by default. We need to go deeper.
\setsecnumdepth{subsection}

% Manually configure page layout
% Add some space to the outer margin for marginalia
\setlrmarginsandblock{1in}{2.5in}{*}
\setulmarginsandblock{1.25in}{1.25in}{*}
\setmarginnotes{0.5in}{1.5in}{5pt}
\setheadfoot{2\onelineskip}{\onelineskip}
\checkandfixthelayout

% Use small font for captions
\captionnamefont{\tiny}
\captiontitlefont{\tiny}

\newenvironment*{medfig}[1][hbtp]{
  \begin{figure}[{#1}]
    \centering
  }{
  \end{figure}
}

\newenvironment*{smallfig}{
  \begin{marginfigure}
    \centering
  }{
  \end{marginfigure}
}

% Let memoir set up subfigure stuff
\newsubfloat{figure}

%% CONFIGURE ANSWERS
% Set up file handlers

\newcommand{\exsolns@fn}{calcnotes-ex}

\newcommand{\openansfiles}{
  \Opensolutionfile{exsolns}[\exsolns@fn]
}

\newcommand{\closeansfiles}{
  \Closesolutionfile{exsolns}
}

\newcommand{\printsolns}{
  \Readsolutionfile{exsolns}
}

% Set up exercise environments
\newenvironment*{gps}{
  \subsection*{Guided practice}
}{

}

\newenvironment*{exercises}{
  \subsection*{Exercises}
}{
  \clearpage
}

\theoremstyle{definition}

\newtheorem{exc}{}[section]
\crefname{exc}{exercise}{exercises}
\Crefname{exc}{Exercise}{Exercises}

\newtheorem{gp}{GP}[section]
\crefname{gp}{GP}{GPs}

\Newassociation{exsol}{Solution}{exsolns}

\theoremstyle{remark}
\newtheorem*{gpsol}{Solution}

% TODO: Set up end-of-book answers with chapter, section names

%%% Local Variables:
%%% mode: latex
%%% TeX-master: "book/calcnotes.tex"
%%% End:
